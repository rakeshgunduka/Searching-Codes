#include<stdio.h>
#include<unistd.h>
#include<string.h>
#define MAX 50
int trap = 0;			//trap variable
int cost_array[50],ca = 0;	//temp cost and its array
int route[50],r = 0,tmp_row[50],tr = 0;	//temp route and its variable
int tcost = 0,prevcost = 0;			//temporary cost
int conn[50][50],cost[50][50]; //connections and cost matrix
int n = 8;	//maximum num of nodes
int np = 0;	//num of paths
int d = 6,r;
int opt_path = 0;
int t1,t2;

struct paths{
	int d[MAX];
	int top;
	int cost;
}p[MAX];

void printroute(char* msg){
	int m;
	printf("\n%s : \t",msg);
	for(m = 0;m < r; m++){
		printf("%d\t",route[m]);
	}
	printf("\n");
}
int check(int *con,int	tc){
	int j;
	for(j = 0;j<tc;j++){
		if(con[j] == d){
			printf("returned 1\n");
			return 1;
		}
	}
	return 0;
} 
int bfs(int row,int start,int calledfrom){
	route[r++] = row;
	tcost = tcost + cost[calledfrom][row];
	int i = row,j,m,tv;
	int tmp_conn[50],tc = 0;
	for(j = start ; j<n ; j++){
		if(conn[i][j] == 0){

		}else{
			if(j == d){
				t2 = 1;
				route[r++] = j;
				tcost = tcost + cost[i][j];
				return 1;
			}else{
				t2 = 0;
				tmp_conn[tc++] = j;
			}
		}
	}
	tv = check(tmp_conn,tc);
	if(tv == 0){
		int val;
		for(m = 0;m<tc;m++){
			val = bfs(tmp_conn[m],0,i);
			if(val == 0){
				continue;
			}else{
				break;
			}
		}
	}else{
		return 6;
	}
}

void main(){
	int i,j;
	char msg[20] = "";
	for(i = 0;i < n; i++ ){
		for(j = 0;j < n; j++ ){
			if(i == 0 && j == 1){
				conn[i][j] = 1;		
				cost[i][j] = 0;
			}else if(i == 1 && j == 2){
				conn[i][j] = 1;		
				cost[i][j] = 9;
			}else if(i == 1 && j == 3){
				conn[i][j] = 1;
				cost[i][j] = 5;	
			}else if(i == 2 && j == 4){
				conn[i][j] = 1;
				cost[i][j] = 2;	
			}else if(i == 2 && j == 5){
				conn[i][j] = 1;
				cost[i][j] = 1;	
			}else if(i == 2 && j == 7){
				conn[i][j] = 1;
				cost[i][j] = 3;	
			}else if(i == 3 && j == 5){
				conn[i][j] = 1;	
				cost[i][j] = 6;
			}else if(i == 4 && j == 5){
				conn[i][j] = 1;	
				cost[i][j] = 1;
			}else if(i == 4 && j == 6){
				conn[i][j] = 1;	
				cost[i][j] = 3;
			}else if(i == 5 && j == 6){
				conn[i][j] = 1;	
				cost[i][j] = 2;
			}else if(i == 7 && j == 6){
				conn[i][j] = 1;	
				cost[i][j] = 2;
			}else{
				conn[i][j] = 0;
				cost[i][j] = 0;
			}
		}	
	}
	for(i = 0;i < n; i++ ){
		for(j = 0;j < n; j++ ){
			printf("%d  ",conn[i][j]);
		}	
		printf("\n");
	}
	printf("\n");
	for(i = 0;i < n; i++ ){
		for(j = 0;j < n; j++ ){
			printf("%d  ",cost[i][j]);
		}	
		printf("\n");
	}
	bfs(1,0,0);
	strcpy(msg,"PathFound");
	printroute(msg);
	printf("Cost of the path  = %d\n",tcost);
	
}
